#include <bits/stdc++.h>
using namespace std;

void solve() {
    int n;
    cin >> n; // Read the number of elements

    vector<int> a(n);
    for (auto &x : a) cin >> x; // Read the elements into vector a

    // Calculate the bitwise AND of all elements
    int cur_and = a[0];
    for (auto x : a) cur_and &= x;

    long long ans = 0;
    // Iterate through the first 31 powers of 2 (from 1 to 2^30)
    for (long long i = 1; i <= (1LL << 30); i *= 2) {
        if (cur_and & i) // Check if the current power of 2 is set in cur_and
            ans += i;    // Add it to the answer
    }

    cout << ans << "\n"; // Print the result
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);

    int t = 1; // You can modify this to read multiple test cases if needed
    cin >> t;
    while (t--) solve(); // Solve each test case

    return 0;
}

