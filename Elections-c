#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
    int testCases;
    cin >> testCases;

    while (testCases--) {
        int numElements, budget;
        cin >> numElements >> budget;

        vector<int> teamA(numElements), teamB(numElements);

        // Input elements for both teams
        for (int i = 0; i < numElements; i++) cin >> teamA[i];
        for (int i = 0; i < numElements; i++) cin >> teamB[i];

        vector<int> extraEffortNeeded;
        int initialWins = 0, minimumWinsRequired = (numElements / 2) + 1;

        for (int i = 0; i < numElements; i++) {
            if (teamA[i] > teamB[i]) {
                initialWins++;
            } else {
                extraEffortNeeded.push_back(teamB[i] - teamA[i] + 1);
            }
        }

        // Check if we have enough wins already
        if (initialWins >= minimumWinsRequired) {
            cout << "YES\n";
            continue;
        }

        // Sort the required efforts in ascending order to use minimal budget
        sort(extraEffortNeeded.begin(), extraEffortNeeded.end());

        for (int i = 0; i < extraEffortNeeded.size() && budget >= extraEffortNeeded[i] && initialWins < minimumWinsRequired; i++) {
            budget -= extraEffortNeeded[i];
            initialWins++;
        }

        cout << (initialWins >= minimumWinsRequired ? "YES\n" : "NO\n");
    }

    return 0;
}
